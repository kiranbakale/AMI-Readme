---
- name: Propagate Secrets if existing
  include_role:
    name: common
    tasks_from: secrets
  tags:
    - reconfigure
    - secrets

- name: Copy over any Custom Files
  copy:
    src: "{{ item.src_path }}"
    dest: "{{ item.dest_path }}"
    mode: "{{ item.mode if item.mode is defined else 'preserve' }}"
  loop: "{{ praefect_custom_files_paths }}"
  tags: reconfigure

- name: Check if custom config exists
  stat:
    path: "{{ praefect_custom_config_file }}"
  delegate_to: localhost
  become: false
  tags: reconfigure
  register: praefect_custom_config_file_path

- name: Non Omnibus database related tasks
  block:
    - name: Create Praefect Database User
      community.postgresql.postgresql_user:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        db: "template1"
        name: "{{ praefect_postgres_username.split('@')[0] }}"
        password: "{{ praefect_postgres_password }}"
        role_attr_flags: CREATEDB
        expires: infinity

    - name: Create Praefect Database
      community.postgresql.postgresql_db:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_username }}"
        login_password: "{{ praefect_postgres_password }}"
        name: "{{ praefect_postgres_database_name }}"
        encoding: UTF-8

    - name: Enable required Postgres extensions
      community.postgresql.postgresql_ext:
        login_host: "{{ praefect_postgres_host }}"
        login_port: "{{ praefect_postgres_port }}"
        login_user: "{{ praefect_postgres_admin_username }}"
        login_password: "{{ praefect_postgres_admin_password }}"
        name: "{{ item }}"
        db: "{{ praefect_postgres_database_name }}"
      loop: ['pg_trgm', 'btree_gist', 'plpgsql', 'pg_stat_statements']
  when:
    - praefect_postgres_external
    - (geo_secondary_site_group_name not in groups)
  tags:
    - reconfigure
    - db_migrate
    - postgres_external
  run_once: true

- name: Perform database migrations
  block:
    - name: Setup Praefect deploy node config file with DB Migrations
      template:
        src: templates/praefect.gitlab.rb.j2
        dest: /etc/gitlab/gitlab.rb
      vars:
        db_migrate: true

    - name: Setup Custom Config
      template:
        src: "{{ praefect_custom_config_file }}"
        dest: "/etc/gitlab/gitlab.praefect.custom.rb"
        mode: 0644
      tags:
        - reconfigure
        - db_migrate
      when: praefect_custom_config_file_path.stat.exists

    - name: Reconfigure Praefect deploy node
      command: gitlab-ctl reconfigure
      register: result
      retries: 3
      until: result is success
  tags:
    - reconfigure
    - db_migrate
  run_once: true

- name: Setup GitLab config file
  template:
    src: templates/praefect.gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
  register: result
  retries: 3
  until: result is success
  tags: reconfigure

- name: Setup Custom Config
  template:
    src: "{{ praefect_custom_config_file }}"
    dest: "/etc/gitlab/gitlab.praefect.custom.rb"
    mode: 0644
  tags: reconfigure
  when: praefect_custom_config_file_path.stat.exists

- name: Reconfigure all Praefects
  command: gitlab-ctl reconfigure
  register: result
  retries: 2
  until: result is success
  tags: reconfigure

- name: Propagate Secrets if new
  include_role:
    name: common
    tasks_from: secrets
  vars:
    gitlab_secrets_reconfigure: true
  tags:
    - reconfigure
    - secrets

- name: Restart all Praefects
  command: gitlab-ctl restart
  register: result
  retries: 2
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Create skip-auto-reconfigure file
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    mode: u=rw,g=r,o=r

- name: Run Custom Tasks
  block:
    - name: Check if Custom Tasks file exists
      stat:
        path: "{{ praefect_custom_tasks_file }}"
      register: praefect_custom_tasks_file_path
      delegate_to: localhost
      become: false

    - name: Run Custom Tasks
      include_tasks:
        file: "{{ praefect_custom_tasks_file }}"
        apply:
          tags: custom_tasks
      when: praefect_custom_tasks_file_path.stat.exists
  tags: custom_tasks
