- name: Failover Promote Secondary - Promote Secondary Site Postgres, Sidekiq, and Gitaly Omnibus nodes
  command: gitlab-ctl geo promote -f
  when:
    - ('postgres' in group_names or 'sidekiq' in group_names or 'gitaly' in group_names)
    - (geo_secondary_site_group_name in group_names)

- name: Failover Promote Secondary - Promote GitLab Rails nodes for Omnibus environments
  command: gitlab-ctl geo promote -f
  when:
    - ('gitlab_rails' in group_names)
    - (geo_secondary_site_group_name in group_names)

- name: Promote Secondary Site for Cloud Native Hybrid environments
  block:
    - name: Failover Promote Secondary - Configure kubeconfig credentials for Geo secondary site
      become: false
      delegate_to: localhost
      run_once: true
      import_tasks: kubeconfig.yml
      vars:
        geo_site_prefix: "{{ geo_secondary_site_prefix }}"
        geo_site_gcp_project: "{{ geo_secondary_site_gcp_project }}"
        geo_site_gcp_zone: "{{ geo_secondary_site_gcp_zone }}"
        geo_site_aws_region: "{{ geo_secondary_site_aws_region }}"

    - name: Failover Promote Secondary - Promote to Primary Site
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s_exec:
        pod: "{{ task_runner_pod }}"
        namespace: "{{ gitlab_charts_release_namespace }}"
        command: gitlab-rake geo:set_secondary_as_primary

    - name: Failover Promote Secondary - Add GitLab Charts repo
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.helm_repository:
        name: "{{ gitlab_charts_repo_name }}"
        repo_url: "{{ gitlab_charts_repo_url }}"

    - name: Failover Promote Secondary - Update GitLab Charts repo
      become: false
      delegate_to: localhost
      run_once: true
      command: "helm repo update {{ gitlab_charts_repo_name }}"

    - name: Failover Promote Secondary - Get GitLab Charts values
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.helm_info:
        name: gitlab
        release_namespace: "{{ gitlab_charts_release_namespace }}"
      register: gitlab_info

    - name: Failover Promote Secondary - Update Geo Role
      become: false
      delegate_to: localhost
      run_once: true
      set_fact:
        gitlab_values: "{{ item.value | regex_replace(\"'role': 'secondary'\", \"'role': 'primary'\") }}"
      loop: "{{ lookup('dict', gitlab_info.status) }}"
      when: "'values' in item.key"

    - name: Get GitLab Charts version if App version specified
      block:
        - name: Failover Promote Secondary - Get all GitLab Charts versions
          command: helm search repo gitlab/gitlab -l -o json
          register: gitlab_charts_versions
          become: false
          delegate_to: localhost
          run_once: true

        - name: Failover Promote Secondary - Match GitLab Charts version to App version
          set_fact:
            gitlab_charts_version: "{{ (gitlab_charts_versions.stdout | from_json | selectattr('name', 'equalto', 'gitlab/gitlab') | selectattr('app_version', 'match', '^v?' + gitlab_version + '$'))[0].version }}"
      when:
        - gitlab_charts_version is not defined
        - gitlab_version != ""

    # To set Chart values based on GitLab app version to align with 16.0 deprecations
    # To be removed after 16.0 is released
    - name: Get GitLab App version if version is not specified
      block:
        - name: Failover Promote Secondary - Get all GitLab Charts versions
          command: helm search repo gitlab/gitlab -l -o json
          register: gitlab_charts_versions
          become: false
          delegate_to: localhost
          run_once: true

        - name: Failover Promote Secondary - Get latest GitLab app version from Charts
          set_fact:
            gitlab_version: "{{ (gitlab_charts_versions.stdout | from_json | selectattr('name', 'equalto', 'gitlab/gitlab'))[0].app_version | regex_replace('^v', '') }}"

        - name: Failover Promote Secondary - Show GitLab app version
          debug:
            msg: "GitLab version is {{ gitlab_version }}"
      when: gitlab_version == ""

    - name: Failover Promote Secondary - Update GitLab Charts
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.helm:
        name: gitlab
        chart_ref: gitlab/gitlab
        chart_version: "{{ gitlab_charts_version | default(None) }}"
        update_repo_cache: true
        release_namespace: "{{ gitlab_charts_release_namespace }}"
        values: "{{ gitlab_values }}"
  when: cloud_native_hybrid_geo

- name: Disable Maintenance mode after GitLab has restarted
  block:
    - name: Failover Promote Secondary - Wait for GitLab to be available
      uri:
        url: '{{ geo_secondary_external_url }}/-/readiness'
        validate_certs: false
        timeout: 60
      register: result
      until: result.status == 200
      retries: 20
      delay: 5
      become: false
      delegate_to: localhost
      run_once: true

    - name: Failover Promote Secondary - Disable Maintenance Mode
      import_tasks: maintenance-mode.yml
      vars:
        maintenance_mode_state: false
        maintenance_mode_message: "GitLab is undergoing maintenance"
        site_group_name: "{{ geo_secondary_site_group_name }}"
        geo_site_prefix: "{{ geo_secondary_site_prefix }}"
        geo_site_gcp_project: "{{ geo_secondary_site_gcp_project }}"
        geo_site_gcp_zone: "{{ geo_secondary_site_gcp_zone }}"
        geo_site_aws_region: "{{ geo_secondary_site_aws_region }}"
  tags: maintenance-mode-disable
