- name: Maintenance Mode - Set Maintenance Mode to {{ maintenance_mode_state }} for Omnibus environments
  command: |
    gitlab-rails runner "::Gitlab::CurrentSettings.update!(maintenance_mode: {{ maintenance_mode_state | lower }}, maintenance_mode_message: \"{{ maintenance_mode_message }}\")"
  with_inventory_hostnames:
    - gitlab_rails_primary:gitlab_rails_secondary:{{ site_group_name }}
  delegate_to: "{{ item }}"
  register: result
  when:
    - (result.rc | default(1)) != 0 # Keep going until the command is successful on any node
    - not cloud_native_hybrid_geo
  run_once: true

- name: Maintenance mode - Enable Maintenance Mode and Set Message for Cloud Native Hybrid environments
  include_tasks: maintenance-mode-cloud-native-hybrid-geo.yml
  loop:
    - { site_prefix: "{{ geo_primary_site_prefix   }}", site_gcp_project: "{{ geo_primary_site_gcp_project if cloud_provider == 'gcp' else '' }}", site_gcp_zone: "{{ geo_primary_site_gcp_zone if cloud_provider == 'gcp' else '' }}", site_aws_region: "{{ geo_primary_site_aws_region if cloud_provider == 'aws' else '' }}" }
    - { site_prefix: "{{ geo_secondary_site_prefix   }}", site_gcp_project: "{{ geo_secondary_site_gcp_project if cloud_provider == 'gcp' else '' }}", site_gcp_zone: "{{ geo_secondary_site_gcp_zone if cloud_provider == 'gcp' else '' }}", site_aws_region: "{{ geo_secondary_site_aws_region if cloud_provider == 'aws' else '' }}" }
  when:
    - cloud_native_hybrid_geo
    - (result.rc | default(1)) != 0
  register: result
