- name: Set up temp folder on local
  tempfile:
    state: directory
    prefix: "gitlab-environment-toolkit-"
  register: geo_temp_folder
  delegate_to: localhost
  become: false
  run_once: true

- name: Copy Secrets - Copy secrets and SSH host keys from primary NFS server to local
  block:
    - name: Copy Secrets - Copy secrets from primary server to local
      fetch:
        src: "{{ gitlab_nfs_path }}/gitlab-secrets.json"
        dest: "{{ geo_temp_folder.path }}/"
        flat: true
      when: ('gitlab_rails_primary' in group_names or 'gitaly_primary' in group_names)
      tags: secrets

    - name: Copy Secrets - Find all SSH host keys on primary Rails node
      ansible.builtin.find:
        paths: "{{ gitlab_shell_ssh_key_path }}/"
        patterns: 'ssh_host_*'
      register: ssh_host_keys
      when: ('gitlab_rails_primary' in group_names)
      tags:
        - host_keys
        - secondary

    - name: Copy Secrets - Fetch all SSH host keys from primary Rails node to local
      fetch:
        src: "{{ item.path }}"
        dest: "{{ geo_temp_folder.path }}/"
        flat: true
      with_items: "{{ ssh_host_keys.files }}"
      no_log: true
      when: ('gitlab_rails_primary' in group_names)
      tags:
        - host_keys
        - secondary
  tags: primary
  when: (geo_primary_site_group_name in group_names)

- name: Copy Secrets - Copy container registry key from primary to secondary
  block:
    - name: Copy Secrets - Copy container registry key from primary to local
      fetch:
        src: /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key
        dest: "{{ geo_temp_folder.path }}/"
        flat: true
      when:
        - ('gitlab_rails_primary' in group_names)
        - (geo_primary_site_group_name in group_names)

    - name: Copy Secrets - Copy container registry key from local to secondary app servers
      copy:
        src: "{{ geo_temp_folder.path }}/gitlab-registry.key"
        dest: /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key
        owner: git
        group: git
        mode: "0644"
      when:
        - ('gitlab_rails' in group_names or 'sidekiq' in group_names)
        - (geo_secondary_site_group_name in group_names)
  tags: secrets
  when:
    - container_registry_enable

- name: Copy Secrets - Copy secrets from local to secondary nodes
  copy:
    src: "{{ geo_temp_folder.path }}/gitlab-secrets.json"
    dest: /etc/gitlab/gitlab-secrets.json
    owner: root
    group: root
    mode: "0600"
  tags:
    - secondary
    - secrets
  when:
    - (geo_secondary_site_group_name in group_names)
    - omnibus_node

- name: Copy Secrets - Copy secrets from local to secondary nfs
  copy:
    src: "{{ geo_temp_folder.path }}/gitlab-secrets.json"
    dest: "{{ gitlab_nfs_path }}/gitlab-secrets.json"
    owner: root
    group: root
    mode: "0600"
  tags:
    - secondary
    - secrets
  when:
    - (ansible_default_ipv4.address == geo_secondary_gitlab_nfs_int_ip)
    - (geo_secondary_site_group_name in group_names)

- name: Copy Secrets - Copy SSH host keys to secondary site
  block:
    - name: Copy Secrets - Copy all SSH host keys to secondary Rails nodes
      copy:
        src: "{{ item }}"
        dest: "{{ gitlab_shell_ssh_key_path }}"
      with_fileglob: "{{ geo_temp_folder.path }}/ssh_host_*"
      no_log: true

    - name: Reload OpenSSH service if being used
      service:
        name: "{{ 'sshd' if ansible_facts['os_family'] == 'RedHat' else 'ssh' }}"
        state: reloaded
      when: gitlab_shell_ssh_daemon == 'openssh'
  tags:
    - secondary
    - host_keys
  when:
    - ('gitlab_rails' in group_names)
    - geo_secondary_site_group_name in group_names
    - not cloud_native_hybrid_geo

- name: Copy Secrets - Reconfigure GitLab
  command: gitlab-ctl reconfigure
  tags: secondary
  when:
    - (geo_secondary_site_group_name in group_names)
    - omnibus_node

- name: Prepare Primary Geo secrets for Cloud Native Hybrid environments
  block:
    - name: Copy Secrets - Configure kubeconfig credentials for Geo primary site
      become: false
      delegate_to: localhost
      run_once: true
      import_tasks: kubeconfig.yml
      vars:
        geo_site_prefix: "{{ geo_primary_site_prefix }}"
        geo_site_gcp_project: "{{ geo_primary_site_gcp_project }}"
        geo_site_gcp_zone: "{{ geo_primary_site_gcp_zone }}"
        geo_site_aws_region: "{{ geo_primary_site_aws_region }}"

    - name: Copy Secrets - Get secrets from Geo primary site
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s:
        kind: Secret
        namespace: "{{ gitlab_charts_release_namespace }}"
        name: "{{ item }}"
      loop:
        - gitlab-gitlab-shell-host-keys
        - gitlab-registry-secret
      register: primary_site_secrets
  when: primary_cloud_native_hybrid_geo

- name: Create Geo secrets for Cloud Native Hybrid environments
  block:
    - name: Copy Secrets - Configure kubeconfig credentials for Geo secondary site
      become: false
      delegate_to: localhost
      run_once: true
      import_tasks: kubeconfig.yml
      vars:
        geo_site_prefix: "{{ geo_secondary_site_prefix }}"
        geo_site_gcp_project: "{{ geo_secondary_site_gcp_project }}"
        geo_site_gcp_zone: "{{ geo_secondary_site_gcp_zone }}"
        geo_site_aws_region: "{{ geo_secondary_site_aws_region }}"

    - name: Copy Secrets - Configure GitLab Geo secrets for Cloud Native Hybrid environments
      become: false
      delegate_to: localhost
      run_once: true
      k8s:
        state: present
        definition:
          kind: Secret
          type: Opaque
          metadata:
            name: "geo"
            namespace: "{{ gitlab_charts_release_namespace }}"
          stringData:
            postgresql-password: "{{ postgres_password }}"
            geo-postgresql-password: "{{ postgres_password }}"

    - name: Copy Secrets - Apply Primary site secrets to Secondary site
      become: false
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s:
        state: present
        definition:
          kind: Secret
          type: Opaque
          metadata:
            name: "{{ item.result.metadata.name }}"
            namespace: "{{ gitlab_charts_release_namespace }}"
          data: "{{ item.result.data }}"
      loop: "{{ primary_site_secrets.results | list }}"
      no_log: true
      when: primary_site_secrets
  when: secondary_cloud_native_hybrid_geo

- name: Remove temp folder
  file:
    path: "{{ geo_temp_folder.path }}"
    state: absent
  delegate_to: localhost
  become: false
  run_once: true
  tags:
    - secondary
    - secrets
    - host_keys
    - delete
  when:
    - ('gitlab_rails_primary' in group_names)
    - (geo_secondary_site_group_name in group_names)
