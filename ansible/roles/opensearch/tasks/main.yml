---
- name: Configure Docker
  include_role:
    name: "{{ 'geerlingguy.docker_arm' if ansible_architecture == 'aarch64' else 'geerlingguy.docker' }}"
  when: ansible_facts['distribution'] != "Amazon"

- name: Configure Docker (RHEL - Amazon Linux 2)
  shell: amazon-linux-extras install docker -y && systemctl enable docker && systemctl start docker
  when: ansible_facts['distribution'] == "Amazon"

- name: Configure Kernel vm.max_map_count setting
  sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: true
    state: present
    reload: true
  tags: sysctl

- name: Remove old Opensearch container
  docker_container:
    name: opensearch
    state: absent
  tags:
    - reconfigure
    - restart

- name: Start Opensearch container(s)
  docker_container:
    name: opensearch
    image: "{{ opensearch_docker_image }}:{{ opensearch_version }}"
    pull: true
    restart_policy: always
    state: started
    env:
      ES_JAVA_OPTS: "-Xms{{ opensearch_heap_size }}m -Xmx{{ opensearch_heap_size }}m"
      bootstrap.memory_lock: 'true'
      cluster.initial_master_nodes: "{{ groups['opensearch'] | join(',') }}"
      discovery.seed_hosts: "{{ opensearch_int_addrs | join(',') }}"
      plugins.security.disabled: 'true'
    volumes:
      - gitlab_search_osdata:/usr/share/opensearch/data
    ulimits: memlock:-1:-1
    network_mode: host
  register: result
  retries: 2
  delay: 5
  until: result is success
  tags:
    - reconfigure
    - restart

- name: Wait for Opensearch container(s) to be available
  uri:
    url: 'http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s'
    timeout: 60
  register: result
  until: result.status == 200
  retries: 20
  delay: 5
  tags:
    - reconfigure
    - restart
